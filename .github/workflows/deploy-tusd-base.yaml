name: 'Deploy tusd'

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ENVIRONMENT_URL:
        required: true
        type: string
      KUBE_NAMESPACE:
        required: true
        type: string
      HELM_ARGS:
        required: true
        type: string

env:
  HELM_CHART: tusd
  KUBE_DEPLOYMENT: tusd

jobs:
  deploy-tusd:
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.ENVIRONMENT }}
      url: ${{ inputs.ENVIRONMENT_URL }}/tus/files

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.KUBE_CLUSTER }}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade --install ${{ env.HELM_CHART }} ./helm/${{ env.HELM_CHART }} --namespace ${{ inputs.KUBE_NAMESPACE }} --create-namespace \
            --set env.AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --set env.AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --set env.AWS_REGION="${{ secrets.AWS_REGION }}" \
            --set env.AWS_S3_ENDPOINT="${{ secrets.AWS_S3_ENDPOINT }}" \
            --set env.AWS_S3_BUCKET="${{ secrets.AWS_S3_BUCKET }}" \
            ${{ inputs.HELM_ARGS }}

      - name: Verify deployment
        run: kubectl rollout status deployment/${{ env.KUBE_DEPLOYMENT }} --namespace ${{ inputs.KUBE_NAMESPACE }} --timeout 2m
